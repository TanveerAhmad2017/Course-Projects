%!PS-Adobe-3.0 
%%Creator: MATLAB, The MathWorks, Inc. Version 7.14.0.739 (R2012a). Operating System: Microsoft Windows 7.
%%Title: ..\figs\equal-length.eps
%%CreationDate: 02/09/2015  21:57:32
%%DocumentNeededFonts: Helvetica-Bold
%%+ Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: (atend)
%%BoundingBox: (atend)
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    59     0   861   480
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0000 6048 csm

  717   286  9617  5762 rc
86 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 11232 6049 rf
6 w
0 4810 8705 0 0 -4810 1459 5264 4 MP
PP
-8705 0 0 4810 8705 0 0 -4810 1459 5264 5 MP stroke
4 w
DO
SO
6 w
0 sg
1459  454 mt 10164  454 L
1459 5264 mt 10164 5264 L
10164 5264 mt 10164  454 L
1459 5264 mt 1459  454 L
1459 5264 mt 10164 5264 L
1459 5264 mt 1459  454 L
1906 5264 mt 1906 5176 L
1906  454 mt 1906  541 L
%%IncludeResource: font Helvetica-Bold
/Helvetica-Bold /WindowsLatin1Encoding 360 FMSR

1806 5644 mt 
(1) s
3318 5264 mt 3318 5176 L
3318  454 mt 3318  541 L
3218 5644 mt 
(2) s
4730 5264 mt 4730 5176 L
4730  454 mt 4730  541 L
4630 5644 mt 
(3) s
6143 5264 mt 6143 5176 L
6143  454 mt 6143  541 L
6043 5644 mt 
(4) s
7555 5264 mt 7555 5176 L
7555  454 mt 7555  541 L
7455 5644 mt 
(5) s
8967 5264 mt 8967 5176 L
8967  454 mt 8967  541 L
8867 5644 mt 
(6) s
1459 4457 mt 1547 4457 L
10164 4457 mt 10076 4457 L
1225 4595 mt 
(3) s
1459 3607 mt 1547 3607 L
10164 3607 mt 10076 3607 L
1225 3745 mt 
(4) s
1459 2758 mt 1547 2758 L
10164 2758 mt 10076 2758 L
1225 2896 mt 
(5) s
1459 1909 mt 1547 1909 L
10164 1909 mt 10076 1909 L
1225 2047 mt 
(6) s
1459 1060 mt 1547 1060 L
10164 1060 mt 10076 1060 L
1225 1198 mt 
(7) s
1459  454 mt 10164  454 L
1459 5264 mt 10164 5264 L
10164 5264 mt 10164  454 L
1459 5264 mt 1459  454 L
gs 1459 454 8706 4811 rc
36 w
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
0 -4810 1459 5264 2 MP stroke
0 -4810 4361 5264 2 MP stroke
0 -4810 7262 5264 2 MP stroke
0 -4810 10164 5264 2 MP stroke
/c9 { 0.000000 1.000000 0.000000 sr} bdef
c9
8705 0 1459 5264 2 MP stroke
8705 0 1459 3660 2 MP stroke
8705 0 1459 2057 2 MP stroke
8705 0 1459 454 2 MP stroke
gr

36 w
c9
80 W
/c10 { 1.000000 0.000000 0.000000 sr} bdef
c10
3268 5196 PD
80 W
4638 2626 PD
80 W
6670 3227 PD
80 W
4015 2671 PD
80 W
6590 3925 PD
80 W
8219 1516 PD
80 W
6497 1858 PD
80 W
6337 2166 PD
80 W
6819 3470 PD
80 W
8436 2291 PD
80 W
8901 1330 PD
80 W
3960 4929 PD
80 W
6418 3266 PD
80 W
7184 3427 PD
80 W
5480 1776 PD
80 W
2774 3299 PD
80 W
7717 1408 PD
80 W
4308 3949 PD
80 W
7629 1934 PD
80 W
7406 2472 PD
80 W
7526 3091 PD
80 W
2587 3329 PD
80 W
9078 1623 PD
80 W
2792 4805 PD
80 W
8224 2704 PD
80 W
3791 3615 PD
80 W
6778 1747 PD
80 W
7936 3379 PD
80 W
7642 2790 PD
80 W
6082 3139 PD
80 W
4158 2193 PD
80 W
5784 894 PD
80 W
4404 1657 PD
80 W
2682 2711 PD
80 W
4207 2861 PD
80 W
7183 2234 PD
80 W
7115 3887 PD
80 W
5179 3344 PD
80 W
6131 2645 PD
80 W
6921 2148 PD
80 W
6405 3589 PD
80 W
6522 3196 PD
80 W
10164 830 PD
80 W
1459 5264 PD
80 W
6685 3263 PD
80 W
6587 2204 PD
80 W
7330 666 PD
80 W
4848 4103 PD
80 W
7781 1476 PD
80 W
6351 3386 PD
80 W
7703 2476 PD
80 W
7933 2707 PD
80 W
8648 557 PD
80 W
5879 1806 PD
80 W
8638 4059 PD
80 W
6463 2898 PD
80 W
3152 2943 PD
80 W
5709 4369 PD
80 W
4999 3178 PD
80 W
2554 4141 PD
80 W
5174 2397 PD
80 W
4779 3935 PD
80 W
7447 2144 PD
80 W
6686 2999 PD
80 W
7771 3600 PD
80 W
6575 2889 PD
80 W
5717 3224 PD
80 W
5829 3017 PD
80 W
6585 2800 PD
80 W
8334 3613 PD
80 W
7617 1038 PD
80 W
3300 2097 PD
80 W
6249 2719 PD
80 W
5564 3560 PD
80 W
7150 2094 PD
80 W
5408 3257 PD
80 W
8273 1911 PD
80 W
5650 4596 PD
80 W
3078 1786 PD
80 W
8795 1481 PD
80 W
6888 1650 PD
80 W
7137 658 PD
80 W
4622 5224 PD
80 W
7673 2933 PD
80 W
1539 3820 PD
80 W
8200 1452 PD
80 W
6005 3236 PD
80 W
2783 3319 PD
80 W
3554 4673 PD
80 W
6422 2733 PD
80 W
6449 2841 PD
80 W
3998 2269 PD
80 W
5103 3487 PD
80 W
8803 2757 PD
80 W
5085 3866 PD
80 W
6073 2350 PD
80 W
7603 2956 PD
80 W
7799 454 PD
80 W
6283 1980 PD
gs 1459 454 8706 4811 rc
gr

0 sg
5710 5964 mt 
(x) s
1088 2960 mt  -90 rotate
(y) s
90 rotate
6 w

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%BoundingBox:    59     0   861   480
%%Pages: 001
%%EOF
